@startuml

Users <|-- Podcaster
Users "1" --> "*" Tokens: Generates

package com.druid.gui.views {
   class LoginView {
      + void method()
   }
   class ForgotPasswordView {
      + void method()
   }
}

package com.druid.gui.controllers {
   class UserController {
      + void method()
   }
   class TokenController {
      + void method()
   }
}

package com.druid.enums {
   enum UserStatus {
      ACTIVE 
      DISABLED
      BANNED
   }

   enum UserRole {
      BASIC
      ADMIN 
   }
}

package com.druid.models {
   class Users {
      - ID: int 
      - firstName: String 
      - lastName: String 
      - username: String 
      - password: String 
      - email: String 
      - role: Enum<UserRole> 
      - status: Enum<UserStatus>
      + void create(User)
      + void update(User)
      + void delete(User)
      + Optional<User> fetchOne(User)
      + Optional<User> authenticate()
   }

   class Podcaster {
      - avatar: String 
      - biography: String 
   }

   class Tokens {
      - ID: int 
      - userID: int 
      - token: String 
      - consumed: boolean 
      - created: Timestamp 
      + void generate()
      + Optional<Token> getMostRecent(User)
      + void update()
      + void clean()
   }
}

note right
   Tokens are secure strings of text that can allow a user that has forgotten their password to recover their account.
end note

@enduml
