@startuml
!theme vibrant

actor Visitor as V
participant "LoginView" as IHM << IHM >>
control ":UserService" as Ctrl
entity "u: User" as User

autonumber

activate IHM
V -> IHM: Input username and password
IHM -> Ctrl: Search for the user in the DB
deactivate IHM
Ctrl -> Ctrl: fetch(User)

alt #DDF2EB [If user exists]

   activate Ctrl
   Ctrl -> Ctrl: getStatus()
   opt #D3CDD7 [If Status == UserStatus.BANNED]
      Ctrl --> IHM ++: Looks like you're banned.
   end

   Ctrl -> Ctrl --: getStatus()

   alt #D3CDD7 [If Status == UserStatus.DISABLED]
      Ctrl -> User **: setStatus(UserStatus.ACTIVE)
   end

   Ctrl -> Ctrl ++: Call BCrypt's verifier()
   note right
      Passwords are encrypted with BCrypt.
   end note

   alt [If input password matches its hashed counterpart]
      Ctrl --> IHM ++: Welcome back :)
   else
      Ctrl --> IHM --: Username/password is incorrect.
   end

   IHM -> User: Populate object with remaining data
   deactivate User
   
else #D3CDD7 [If user doesn't exist]

   Ctrl --> IHM ++: We don't have this user in our database.

end

@enduml
